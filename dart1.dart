//! Вступ, змінні, типи, функції.
//! Вступ, змінні, типи, функції.
//! Вступ, змінні, типи, функції.

// Функція в програмуванні - це поведінка...
// В середині ф-ї - поведінка
// void - те що ф-я повертає
// () - те що ми кладемо в ф-ю
// main - назва ф-ї
// Назва ф-ї + те що ми покладемо в неї = СИГНАТУРА ф-ї
// Ф-я main не повинна повертати жодного значення
// В Dart обовязково повинна бути ф-я main яка повертає пустоту...
// В програмуванні все або обєкти або ф-ї... ще є оператори... S І ф-ї - це обьекти...
// Ф-я обовязково повинна щось повертати... якщо ми хочемо уникнути цього то використовуємо void...

//! ==========================================================

// void main() {
//   // синхронне виконання
//   print("Hello Dart1!");
//   print("Hello Dart2!");
//   print("Hello Dart3!");
// }

//! ==========================================================

// є відсутність обьекта
// ми повинні його проініціалізувати...

// void main() {
//   // спочатку тип пишемо, потім назва обьекта. спочатку те чим він являється потім як він називається...
//   // iніціалізація обьекта...
//   // Знак ? - говорить про те що обєкт може бути пустим не проініціалізованим...
//   Object? object = "Hello";
//   // object = null;
//   String? object2 = "Hello2";
//   print(object);
//   print(object2);
//   // String - це тип який наслідується від обєкта
//   // Всі типи наслідуються від обєкта, вони мають свої особливості но вони всі також мають особливості обєкта...
//   print(object.runtimeType);
//   print(object2.runtimeType);
// }

//! ==========================================================

// String - наслідується від обьекта... це текст...
// Number - наслідується від обьекта... може бути int (цілечисельний) або double...
// bool - true або false...

// runtimeType - те що ми бачито коли програма виконується...
// компіляція програми - це перетворення вашого коду в якийсь уніфікований код який потім буде виконуватися... ви його не бачите... він просто виконується...

// void main() {
//   String object = 'Volodymyr';
//   print(object.runtimeType); // String

//   int number = 1;
//   print(number.runtimeType); // int

//   double number2 = 3.14;
//   print(number2.runtimeType); // double

//   bool boolean = true;
//   print(boolean.runtimeType); // bool

//   print(number == number2); // false
//   print(number != number2); // true

//   print(!(number == number2)); // true
//   print(!(!(number == number2))); // false
// }

//! ==========================================================

// Зробим свою ф-ю...

// void main() {
//   saySomething('Study Dart');
// }

// void saySomething(String text) {
//   print(text);
// }

//! ==========================================================

// Ф-я обовязково повинна щось повертати... якщо ми хочемо уникнути цього то використовуємо void...
// Ми можем сказати що ф-я повертає String

// void main() {
//   myFunction('Study Dart');
// }

// String myFunction(String text) {
//   return text;
// }

// У String є ІНТЕРПОЛЯЦІЯ
// Конкатенація - складення стрінгів...

// void main() {
//   print(myFunction('Study Dart'));
// }

// String myFunction(String text) {
//   // Конкатенація
//   return 'Start ' + text;
// }

// В Dart можна так

// void main() {
//   print(myFunction('Study Dart'));
// }

// String myFunction(String text) {
//   // Конкатенація
//   return 'Start $text write yet for example ${text.length} symbols';
// }

// void main() {
//   print(myFunction2('test'));
// }

// int myFunction2(String text) {
//   return 5 % 2; // 1
// }

//! ==========================================================

// void main() {
//   print(DateTime.now());
// }

//! =======================VAR, CONST, FINAL===================================
//! ==========================================================
//! ==========================================================

// const - не можна змінити, займаэ мысце завжди на початку...
// final - також не можна змінити але поки його не проініціалізували в runtaime його немає... но проініціалізувати його можна лише один раз... і коли його проініціалізували то для програми уже немає відмінності від const...
// то що повинно змінюватися...

const foo = 2;

void main() {
  var foo2 = 3;
  foo2 = 10;
  // ми не можемо змінити тип ніколи...
  // foo2 = '10';
  // foo2 = true;

  print(foo2);
  print(foo2.runtimeType); // int
}

//? ДЗ
//? ДЗ
//? ДЗ


// 1. У змінних q і w зберігаються два натуральних числа. Створіть функцію,
//      яка виводить на екран результат ділення q на w із залишком.
//    Приклад виведення програми (для випадку, коли в q зберігається 21, а в w зберігається 8)
// 2. У змінній n зберігається натуральне двозначне число. Створіть функцію,
//      яка обчислює і виводить на екран суму цифр числа n.
// 3. У змінній n зберігається дійсне число з ненульовою дробовою частиною. Створіть функцію,
//      округляє число n до найближчого цілого і виводить результат на екран.
// 4. У змінній n зберігається натуральне тризначне число. Створіть функцію,
//      яка обчислює і виводить на екран суму цифр числа n.


